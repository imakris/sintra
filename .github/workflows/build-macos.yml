name: Build - macOS

on:
  push:
    branches: ['*']
    paths:
      - 'src/**'
      - 'include/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'tests/**'
      - 'example/**'
      - 'third_party/**'
      - '.github/workflows/**'
  pull_request:
    branches: ['*']
    paths:
      - 'src/**'
      - 'include/**'
      - 'cmake/**'
      - 'CMakeLists.txt'
      - 'CMakePresets.json'
      - 'tests/**'
      - 'example/**'
      - 'third_party/**'
      - '.github/workflows/**'

jobs:
  build:
    name: Build
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed areas
        id: changed
        uses: dorny/paths-filter@v3
        with:
          filters: |
            core:
              - 'src/**'
              - 'include/**'
              - 'cmake/**'
              - 'CMakeLists.txt'
              - 'CMakePresets.json'
              - 'third_party/**'
            tests:
              - 'tests/**'
            examples:
              - 'example/**'
            workflows:
              - '.github/workflows/**'

      - name: Compute CMake flags
        id: flags
        shell: bash
        run: |
          CT="-DSINTRA_BUILD_TESTS=OFF -DSINTRA_TEST_MATRIX=quick"
          CE="-DSINTRA_BUILD_EXAMPLES=OFF"
          build_tests=false
          if [ "${{ steps.changed.outputs.tests }}" = "true" ] || [ "${{ steps.changed.outputs.core }}" = "true" ]; then
            CT="-DSINTRA_BUILD_TESTS=ON -DSINTRA_TEST_MATRIX=quick"
            build_tests=true
          fi
          if [ "${{ steps.changed.outputs.examples }}" = "true" ]; then
            CE="-DSINTRA_BUILD_EXAMPLES=ON"
          fi
          echo "CMAKE_FLAGS=$CT $CE" >> "$GITHUB_OUTPUT"
          echo "build_tests=$build_tests" >> "$GITHUB_OUTPUT"

      - name: Verify LLDB availability
        run: |
          if ! xcrun -f lldb >/dev/null 2>&1; then
            echo "::error::lldb not available via xcrun. Install Xcode Command Line Tools to provide LLDB." >&2
            exit 1
          fi
          xcrun lldb --version

      - name: Configure CMake
        run: cmake -B build -S . -DCMAKE_BUILD_TYPE=Release ${{ steps.flags.outputs.CMAKE_FLAGS }}

      - name: Build
        run: cmake --build build --config Release

      - name: Run quick tests
        if: steps.flags.outputs.build_tests == 'true'
        run: ctest --test-dir build --build-config Release --output-on-failure

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-build-${{ github.event.pull_request.head.sha || github.sha }}
          path: build/
          retention-days: 1
