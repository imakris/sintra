name: Stress Test - macOS
run-name: Stress Test - ${{ github.event.workflow_run.display_title }}

on:
  workflow_run:
    workflows: ["Build - macOS"]
    types:
      - completed

permissions:
  actions: read
  contents: read

jobs:
  stress-test:
    name: Stress Test
    runs-on: macos-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}
          fetch-depth: 0

      - name: Detect changed areas
        id: changed
        uses: dorny/paths-filter@v3
        with:
          base: ${{ github.event.workflow_run.pull_requests[0].base.sha || (github.event.workflow_run.before && github.event.workflow_run.before != '0000000000000000000000000000000000000000' && github.event.workflow_run.before) || format('{0}^', github.event.workflow_run.head_sha) }}
          ref: ${{ github.event.workflow_run.head_sha }}
          filters: |
            core:
              - 'src/**'
              - 'include/**'
              - 'cmake/**'
              - 'CMakeLists.txt'
              - 'CMakePresets.json'
              - 'third_party/**'
            tests:
              - 'tests/**'
            examples:
              - 'example/**'
            workflows:
              - '.github/workflows/**'

      - name: Decide whether to run stress tests
        id: stress-gate
        shell: bash
        run: |
          should_run=false
          if [ "${{ steps.changed.outputs.core }}" = "true" ] || \
             [ "${{ steps.changed.outputs.tests }}" = "true" ] || \
             [ "${{ steps.changed.outputs.examples }}" = "true" ]; then
            should_run=true
          fi
          echo "run=$should_run" >> "$GITHUB_OUTPUT"

      - name: Skip stress suite for workflow-only changes
        if: steps.stress-gate.outputs.run != 'true'
        run: echo "No core, test, or example changes detected; skipping stress execution."

      - name: Verify LLDB availability
        if: steps.stress-gate.outputs.run == 'true'
        run: |
          if ! xcrun -f lldb >/dev/null 2>&1; then
            echo "::error::lldb not available via xcrun. Install Xcode Command Line Tools to provide LLDB." >&2
            exit 1
          fi
          xcrun lldb --version

      - name: Enable debugger attachments and core dumps
        if: steps.stress-gate.outputs.run == 'true'
        shell: bash
        run: |
          sudo /usr/sbin/DevToolsSecurity -enable
          sudo dscl . append /Groups/_developer GroupMembership "$(whoami)" || true
          sudo mkdir -p /cores
          sudo chmod 1777 /cores
          sudo launchctl limit core unlimited unlimited
          sudo sysctl kern.corefile=core.%P || true

      - name: Download build artifacts
        if: steps.stress-gate.outputs.run == 'true'
        uses: actions/download-artifact@v4
        with:
          name: macos-build-${{ github.event.workflow_run.head_sha }}
          path: build/
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
          if-no-artifact-found: error

      - name: Setup Python
        if: steps.stress-gate.outputs.run == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Make test executables executable
        if: steps.stress-gate.outputs.run == 'true'
        shell: bash
        run: |
          if [ -d build/tests ]; then
            find build/tests -type f -exec chmod +x {} +
          fi

      - name: Run stress tests with run_tests.py
        if: steps.stress-gate.outputs.run == 'true'
        shell: bash
        run: |
          ulimit -c unlimited
          cd tests
          python run_tests.py --repetitions 10 --timeout 30 --build-dir ../build --config Release
