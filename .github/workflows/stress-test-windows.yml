name: Stress Test - Windows
run-name: Stress Test - ${{ github.event.workflow_run.display_title }}

on:
  workflow_run:
    workflows: ["Build - Windows"]
    types:
      - completed

permissions:
  actions: read
  contents: read

jobs:
  stress-test:
    name: Stress Test
    runs-on: windows-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build-${{ github.event.workflow_run.head_sha }}
          path: build/
          github-token: ${{ github.token }}
          run-id: ${{ github.event.workflow_run.id }}
          if-no-artifact-found: error

      - name: Read change summary
        id: changed
        shell: bash
        run: |
          file="build/changed-areas.env"
          core=false
          tests=false
          examples=false
          workflows=false
          if [ -f "$file" ]; then
            while IFS='=' read -r name value; do
              case "$name" in
                core) core="$value" ;;
                tests) tests="$value" ;;
                examples) examples="$value" ;;
                workflows) workflows="$value" ;;
              esac
            done < "$file"
          fi
          echo "core=$core" >> "$GITHUB_OUTPUT"
          echo "tests=$tests" >> "$GITHUB_OUTPUT"
          echo "examples=$examples" >> "$GITHUB_OUTPUT"
          echo "workflows=$workflows" >> "$GITHUB_OUTPUT"

      - name: Ensure Windows debugging tools
        if: steps.changed.outputs.tests == 'true' || steps.changed.outputs.workflows == 'true'
        shell: pwsh
        run: |
          function Get-DebugDirectories {
            return @(
              "${env:ProgramFiles(x86)}\Windows Kits\10\Debuggers\x64",
              "${env:ProgramFiles(x86)}\Windows Kits\10\Debuggers\x86"
            ) | Where-Object { $_ -and (Test-Path $_) }
          }

          $debugDirs = Get-DebugDirectories
          if (-not $debugDirs) {
            $packages = @(
              'windows-sdk-10-version-10.0.26100.1742',
              'windows-sdk-10-version-10.0.26100.1',
              'windows-sdk-10-version-10.0.22621.755'
            )

            $installed = $false
            foreach ($package in $packages) {
              Write-Host "Attempting to install $package via Chocolatey"
              choco install $package --no-progress -y --package-parameters "'ADDLOCAL=DebuggingTools'"
              if ($LASTEXITCODE -in 0, 3010, 1641) {
                if ($LASTEXITCODE -ne 0) {
                  Write-Host "Chocolatey reported reboot-required exit code $LASTEXITCODE for $package; treating as success"
                  $global:LASTEXITCODE = 0
                }
                $installed = $true
                break
              }
              Write-Warning "Failed to install $package (exit code $LASTEXITCODE)."
              $global:LASTEXITCODE = 0
            }

            if (-not $installed) {
              Write-Warning "Windows debugging tools could not be installed. Packages tried: $($packages -join ', ')"
            }

            $debugDirs = Get-DebugDirectories
          }

          if (-not $debugDirs) {
            Write-Warning 'Windows debugging tools not found. Crash dump collection will be skipped during stress tests.'
          } else {
            foreach ($dir in $debugDirs) {
              Add-Content -Path $env:GITHUB_PATH -Value $dir
            }
          }

      - name: Verify Windows debuggers
        if: steps.changed.outputs.tests == 'true' || steps.changed.outputs.workflows == 'true'
        shell: pwsh
        run: |
          $candidates = @('cdb', 'ntsd', 'windbg')
          $found = @()
          foreach ($candidate in $candidates) {
            $command = Get-Command $candidate -ErrorAction SilentlyContinue
            if ($command) {
              $paths = @($command | ForEach-Object {
                  if ($_.Source) { $_.Source } else { $_.Definition }
                }) | Where-Object { $_ }
              if (-not $paths) {
                $paths = @('<unknown path>')
              }
              Write-Host "$candidate -> $($paths -join ', ')"
              $found += $candidate
            } else {
              Write-Warning "Unable to locate $candidate"
            }
            $global:LASTEXITCODE = 0
          }
          if (-not $found) {
            Write-Warning "No Windows debugger discovered. Checked: $($candidates -join ', ')"
            Add-Content -Path $env:GITHUB_ENV -Value 'SINTRA_WINDOWS_DEBUGGER_AVAILABLE=false'
          } else {
            Add-Content -Path $env:GITHUB_ENV -Value 'SINTRA_WINDOWS_DEBUGGER_AVAILABLE=true'
          }

      - name: Setup Python
        if: steps.changed.outputs.tests == 'true' || steps.changed.outputs.workflows == 'true'
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Run stress tests with run_tests.py
        if: steps.changed.outputs.tests == 'true' || steps.changed.outputs.workflows == 'true'
        shell: bash
        run: |
          cd tests
          python run_tests.py --repetitions 10 --timeout 30 --build-dir ../build --config Release
